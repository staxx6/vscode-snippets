{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"main": {
		"prefix": "main",
		"body": [
			"$2",
			"int main(void) {",
			"",
			"\t$1",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "Standard main without args"
	},

	"include_stdio": {
		"prefix": "stdio.h",
		"body": [
			"#include <stdio.h>",
			"$1"
		],
		"description": "Include stdio.h"
	},

	"printf": {
		"prefix": "_printf_",
		"body": [
			"printf(\"$1\\n\");",
		],
		"description": "printf with new line"
	},

	"printf_no": {
		"prefix": "_printf_no",
		"body": [
			"printf(\"$1\");",
		],
		"description": "printf without new line"
	},

	"printf_arg": {
		"prefix": "_printf_arg",
		"body": [
			"printf(\"%$1\",$2);",
		],
		"description": "printf with arg"
	},

	"printf_arg_new": {
		"prefix": "_printf_arg_new",
		"body": [
			"printf(\"%$1\n\",$2);",
		],
		"description": "printf with arg and new line"
	},
	
	"header": {
		"prefix": "header",
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"#define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"$1",
			"",
			"#endif /* ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H */"
		],
		"description": "Include guards for c headers"
	}
}